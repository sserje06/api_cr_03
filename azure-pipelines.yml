# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
- group: build_variables

parameters:
  - name: buildApi01
    type: boolean
    default: False
    displayName: Build API 01
  - name: buildApi02
    type: boolean
    default: False
    displayName: Build API 02

stages:
- stage: Build
  jobs:
  - job: createEnvironments
    steps:
    - task: PowerShell@2
      displayName: Generate Environments
      inputs:
        targetType: 'inline'
        script: |
          $newArray=[ordered] @{}
          $environments = "${env:VAR_ENVIRONMENTS}"
          $getArray = $environments.split(",")

          foreach ($i in $getArray){
              $newArray += @{
                  $i = @{"var_environments"=$i}
              }
          }
          $convertArrayToJson = $newArray | convertTo-json -Compress
          echo "##vso[task.setVariable variable=environments;isOutput=true]$convertArrayToJson"
      name: matrix_deployment 
  - job: Build
    dependsOn: createEnvironments
    displayName: Creating Environments
    strategy:
      matrix: $[dependencies.createEnvironments.outputs['matrix_deployment.environments']]
      maxParallel: 1
    pool:
      vmImage: ubuntu-18.04
    steps:
    - checkout: self
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $sourceBranch = "$(Build.SourceBranch)"
          $result=$sourceBranch.Substring(24 -13)
          echo "##vso[task.setVariable variable=SOURCEBRANCH_NAME;]$result"
    - task: DotNetCoreCLI@2
      displayName: Restore Nuget Package
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      displayName: Build Application
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      displayName: Publish Project
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: 'release'
    - task: PublishBuildArtifacts@1
      displayName: Create Artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/publish'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $body = "@
          {
            "definition":{
              "id": $id
            },
            "sourceBranch": "$(sourceBranch)"
          }
          "@
          
          $contentType = 'application/json'
          $url = "https://dev.azure.com/azureDevOpsLaboratory/Azureworshop/_apis/build/builds?api-version=6.1-preview.6"
          $executeCommand= Invoke-RestMethod -Uri $url -Method POST -Body $body -ContenType $contentType -Headers @{
            Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"
          }
          
          $getBuildId=$executeCommand.id
          echo "##vso[task.setVariable variable=BUILD_ID_01;]$getBuildId"